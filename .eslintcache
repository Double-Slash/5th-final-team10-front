[{"C:\\Users\\gju06\\Desktop\\final\\src\\reportWebVitals.js":"1","C:\\Users\\gju06\\Desktop\\final\\src\\App.js":"2","C:\\Users\\gju06\\Desktop\\final\\src\\components\\SurveyPreview.js":"3","C:\\Users\\gju06\\Desktop\\final\\src\\components\\PopUpWindow.js":"4","C:\\Users\\gju06\\Desktop\\final\\src\\index.js":"5","C:\\Users\\gju06\\Desktop\\final\\src\\components\\SearchResultList.js":"6","C:\\Users\\gju06\\Desktop\\final\\src\\components\\PointFilter.js":"7","C:\\Users\\gju06\\Desktop\\final\\src\\components\\GridSurveyPreview.js":"8","C:\\Users\\gju06\\Desktop\\final\\src\\pages\\ClosedSurvey.js":"9","C:\\Users\\gju06\\Desktop\\final\\src\\pages\\ResponseSurvey.js":"10","C:\\Users\\gju06\\Desktop\\final\\src\\common\\SurveyTable.js":"11","C:\\Users\\gju06\\Desktop\\final\\src\\common\\DropdownMenu.js":"12","C:\\Users\\gju06\\Desktop\\final\\src\\common\\SurveyIntro.js":"13","C:\\Users\\gju06\\Desktop\\final\\src\\pages\\SurveyResult.js":"14","C:\\Users\\gju06\\Desktop\\final\\src\\_reducers\\index.js":"15","C:\\Users\\gju06\\Desktop\\final\\src\\_actions\\survey_action.js":"16","C:\\Users\\gju06\\Desktop\\final\\src\\_actions\\types.js":"17","C:\\Users\\gju06\\Desktop\\final\\src\\_reducers\\survey_reducer.js":"18","C:\\Users\\gju06\\Desktop\\final\\src\\common\\ClosedQuestionForm.js":"19","C:\\Users\\gju06\\Desktop\\final\\src\\common\\ClosedGraphForm.js":"20","C:\\Users\\gju06\\Desktop\\final\\src\\common\\QuestionForm.js":"21"},{"size":362,"mtime":1608295353417,"results":"22","hashOfConfig":"23"},{"size":1867,"mtime":1611364123577,"results":"24","hashOfConfig":"23"},{"size":2714,"mtime":1610664364290,"results":"25","hashOfConfig":"23"},{"size":2786,"mtime":1610631124273,"results":"26","hashOfConfig":"23"},{"size":1094,"mtime":1611165430553,"results":"27","hashOfConfig":"23"},{"size":1779,"mtime":1610654636849,"results":"28","hashOfConfig":"23"},{"size":1647,"mtime":1611364300816,"results":"29","hashOfConfig":"23"},{"size":5358,"mtime":1611313612205,"results":"30","hashOfConfig":"23"},{"size":1023,"mtime":1611359623234,"results":"31","hashOfConfig":"23"},{"size":5659,"mtime":1611478901289,"results":"32","hashOfConfig":"23"},{"size":1434,"mtime":1611357413807,"results":"33","hashOfConfig":"23"},{"size":1184,"mtime":1610790707834,"results":"34","hashOfConfig":"23"},{"size":2803,"mtime":1611360358864,"results":"35","hashOfConfig":"23"},{"size":9355,"mtime":1611357831392,"results":"36","hashOfConfig":"23"},{"size":167,"mtime":1610949952349,"results":"37","hashOfConfig":"23"},{"size":2186,"mtime":1611480150813,"results":"38","hashOfConfig":"23"},{"size":235,"mtime":1611328006741,"results":"39","hashOfConfig":"23"},{"size":551,"mtime":1611328021403,"results":"40","hashOfConfig":"23"},{"size":5863,"mtime":1611267581341,"results":"41","hashOfConfig":"23"},{"size":5290,"mtime":1611363914342,"results":"42","hashOfConfig":"23"},{"size":6326,"mtime":1611343783846,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1t1zr20",{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"46"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"46"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"46"},"C:\\Users\\gju06\\Desktop\\final\\src\\reportWebVitals.js",[],["103","104"],"C:\\Users\\gju06\\Desktop\\final\\src\\App.js",["105","106","107","108","109"],"import logo from './logo.svg';\nimport './App.css';\nimport SearchResultList from './components/SearchResultList'\nimport GridSurveyPreview from './components/GridSurveyPreview'\nimport ClosedSurvey from './pages/ClosedSurvey'\nimport ResponseSurvey from './pages/ResponseSurvey'\nimport SurveyResult from './pages/SurveyResult'\nimport PointFilter from './components/PointFilter'\nimport React, { useState } from 'react'\nimport { BrowserRouter as Router ,Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n /* const [modalIsOpen, setmodalIsOpen] = useState(false)\n     //PopUpWindow 태그 사용시\n  const togglePop = () => {\n    setmodalIsOpen(!modalIsOpen)\n  }*/\n\n  return (\n    <div>\n    <Router>\n    <Switch>\n      <Route exact path=\"/\" component={PointFilter}/>\n      <Route exact path=\"/result/:id\" component={SurveyResult}/>\n      <Route exact path=\"/response\" component={ResponseSurvey}/>\n    </Switch>\n    </Router>\n    </div>\n   /* <div > //팝업창 사용시\n      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n        <button onClick={togglePop}>클릭</button>\n      </div>\n      { modalIsOpen ? <PopUpWindow toggle={togglePop} /> : null}\n    </div >*/\n  )\n}\n\nexport default App\n\n\n/*class App extends Component {\n  constructor(props) {\n    super(props);\n    this.togglePop=this.togglePop.bind(this);\n    this.state = {\n      modalIsOpen: false\n    };\n  }\n  togglePop(){\n    this.setState({\n      modalIsOpen: !this.state.modalIsOpen\n    })\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"btn\"\n          onClick={function () { this.setState({ modalIsOpen: !this.state.modalIsOpen }) }.bind(this)}>\n          <button>Button</button>\n        </div>\n          {this.state.modalIsOpen ? <PopUpWindow toggle={this.togglePop} /> : null}\n      </div>\n    );\n  }\n}\n\nexport default App;*/\n","C:\\Users\\gju06\\Desktop\\final\\src\\components\\SurveyPreview.js",["110","111","112"],"import React, { useEffect, useState } from 'react'\r\nimport QuestionForm from '../common/QuestionForm'\r\nimport SurveyIntro from '../common/SurveyIntro'\r\nfunction SurveyPreview(props) {\r\n   \r\n    const [questionDatas, setquestionDatas] = useState([])\r\n\r\n    const questionData = ([\r\n        // 이전 페이지에서 props로 받기\r\n        { //임의로 넣은 데이터입니당\r\n          questionId : 1,\r\n          questionNo:'1-1',\r\n          question: '맥딜리버리 어플을 사용한 경험이 있습니까?',\r\n          example : ['네','아니오'],\r\n        },\r\n        {\r\n          questionId : 7,\r\n          questionNo:'1-2',\r\n          question: '평소 맥딜리버리 어플 사용빈도는 몇 회 입니까?',\r\n          example : ['한달 2회 이하','일주일 1회 이하','일주일 2회~4회','일주일 5회 이상'],\r\n        },\r\n        {\r\n          questionId : 4,\r\n          questionNo:'2-1',\r\n          question: '해당 어플 사용에 있어 불편함을 겪었던 경험이 있나요?',\r\n          example : ['네','아니오'],\r\n        },\r\n        {\r\n          questionId :5,\r\n          questionNo:'2-2',\r\n          question: '‘네’를 선택했다면, 해당 어플을 사용 중 불편함을 겪었던 메뉴를 선택해주세요.',\r\n          example : ['메뉴 담기','결제 하기','주문 조회','기타'],\r\n        }\r\n      ])\r\n\r\n    const mapToComponent = data => {\r\n        return data.map((question, index) => (<QuestionForm question={question} key={index}/>) //QuestionForm 태그 배열 만들어짐\r\n        ); }\r\n   \r\n        /* // 이전 화면에서 데이터 props로 가져오기\r\n    useEffect(() => {\r\n        setquestionDatas(props.datas);\r\n    })*/\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ width: '1280px', marginLeft: '320px', marginRight:'320px' }}>\r\n                {/*  미리보기 배너  */}\r\n                <div className='align_center' style={{ fontFamily: 'Noto Sans CJK KR', backgroundColor: '#D7E6FF', width: '100%', height: '38px' }}>\r\n                    <span style={{ fontWeight: '700', fontSize: '18px', color: '#418AFF' }}>[미리보기]</span>\r\n                </div>\r\n                {/*  미리보기 배너  */}\r\n\r\n                <SurveyIntro preview={1}/>\r\n\r\n                <hr style={{backgroundColor:'#C4C4C4', marginTop:'64px',height:'1px', border:'0'}}/>\r\n        \r\n                {/*  질문 항목들  */}\r\n               <div style={{marginTop:'64px', marginBottom:'57px'}}>\r\n                    {mapToComponent(questionData)}\r\n               </div>\r\n                {/*  질문 항목들  */}\r\n\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SurveyPreview\r\n",["113","114"],"C:\\Users\\gju06\\Desktop\\final\\src\\components\\PopUpWindow.js",["115","116","117","118"],"import React, { useState, useEffect } from 'react'\r\n\r\nfunction PopUpWindow(props) {\r\n\r\n    const [Point, setPoint] = useState(0)\r\n    const [BalancePoint, setBalancePoint] = useState(0)\r\n\r\n    const okClick = ()=>{\r\n        props.toggle()\r\n\r\n       /* fetch()\r\n        .then(response=>{\r\n            // 포인트 차감해서 서버로 보내기\r\n        })*/\r\n    }\r\n\r\n   /* useEffect(() => { //DOM이 로드되면 할 일(포인트 불러올 때 사용)\r\n\r\n      \r\n        fetch()\r\n            .then(response => {\r\n                setPoint() //서버에서 포인트 정보 가져오기\r\n            })\r\n\r\n    }, [])*/\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"align_center\">\r\n                <div className=\"modal_content\" style={{fontFamily:'Noto Sans CJK KR'}}>\r\n\r\n                    <span className=\"close\" onClick={props.toggle}>\r\n                        &times;\r\n                    </span>\r\n                    <div style={{marginTop:'112px', marginLeft: '91px', marginRight: '91px'}}>\r\n                        <div className=\"popUp_text\" >\r\n                            해당 설문조사 결과를 보기 위해선\r\n                            <span style={{ color: '#418AFF' }}>\r\n                                    &nbsp;{Point}P\r\n                            </span>\r\n                            가 필요합니다.포인트를 사용하시겠습니까?\r\n                        </div>\r\n                         \r\n                        <div style={{color:'#898989', fontWeight:'400',fontSize:'14px', textAlign:'center', marginTop:'18px'}}>( 현재 포인트 : {Point}P )</div>\r\n                        <div style={{color:'#898989', fontWeight:'400',fontSize:'14px', textAlign:'center', marginTop:'10px'}}>( 잔여 포인트 : {BalancePoint}P )</div>\r\n                    </div>\r\n                    <div className=\"align_center\">\r\n                        <button className=\"ok_btn\" onClick={okClick}>\r\n                            <span style={{fontWeight:'400',fontSize:'18px',color:'white'}}>확인</span>\r\n                        </button>\r\n                    </div>\r\n                    <div style={{textAlign:'center', fontWeight:'14px', color:'#418AFF', marginTop:'20px'}}>\r\n                        <a>포인트가 모자르다면? 설문조사 참여하고 포인트 받기</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopUpWindow\r\n\r\n\r\n\r\n\r\n\r\n/*class PopUpWindow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n    handleClick() {\r\n        this.props.toggle();\r\n    }\r\n    render() {\r\n        return (\r\n\r\n        );\r\n    }\r\n}*/\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\index.js",[],"C:\\Users\\gju06\\Desktop\\final\\src\\components\\SearchResultList.js",["119","120","121","122"],"import React, { useState } from 'react'\r\nimport SurveyTable from '../common/SurveyTable'\r\n\r\n\r\nfunction SearchResultList() {\r\n\r\n  const [SearchKeyword, setSearchKeyword] = useState('수면시간')\r\n  const [NumOfSearch, setNumOfSearch] = useState(0)\r\n  const [SearchResults, setSearchResults] = useState([])\r\n// 서버 통신해서 SearchResults를 SurveyTable의 data로 보내기.\r\n\r\n  const data = [ // 임시 데이터\r\n    {\r\n      key: '1',\r\n      title: 'John Brown',\r\n      point: 32,\r\n      num_of_response: 'New York No. 1 Lake Park',\r\n      period: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n      key: '2',\r\n      title: 'Jim Green',\r\n      point: 42,\r\n      num_of_response: 'London No. 1 Lake Park',\r\n      period: 'New York No. 1 Lake Park',\r\n    },\r\n    {\r\n      key: '3',\r\n      title: 'Joe Black',\r\n      point: 32,\r\n      num_of_response: 'Sidney No. 1 Lake Park',\r\n      period: 'New York No. 1 Lake Park',\r\n    },\r\n  ];\r\n  \r\n  /*\r\n  useEffect(() => {\r\n    fetch()\r\n            .then(response => {\r\n                setSearchResults(response.json()) //서버에서 검색 결과 가져오기\r\n            })\r\n  })*/\r\n\r\n \r\n  return (\r\n    <div style={{width:'1920px', fontFamily:'Noto Sans CJK KR'}}>\r\n      <div style={{ float:'left', marginLeft:'320px',marginBottom:'20px',fontWeight: '700', fontSize:'18px' }}>\r\n        <span style={{fontWeight: '700', color: '#418AFF'}}>\r\n          ' {SearchKeyword} '\r\n            </span>\r\n            &nbsp;에 대한 검색 결과 입니다.\r\n\r\n            <div style={{ fontSize: '14px', fontWeight: '500', color: '#898989' }}>\r\n          ( {NumOfSearch}개 결과 검색 )\r\n            </div>\r\n      </div>\r\n      \r\n      <SurveyTable data={data}></SurveyTable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchResultList\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\components\\PointFilter.js",["123"],"import React, { useState, useEffect } from 'react'\r\n\r\nfunction PointFilter() {\r\n\r\n    const [point, setpoint] = useState(0)\r\n\r\n    useEffect(() => {\r\n       const slideValue = document.querySelector(\"span\");\r\n       const inputSlider = document.querySelector(\"input\");\r\n       inputSlider.oninput = (()=>{\r\n           let value = inputSlider.value;\r\n           setpoint(value);\r\n           slideValue.textContent = value;\r\n           slideValue.style.left = (value/5.1)+\"%\";\r\n           slideValue.classList.add(\"show\");\r\n           /*fetch() // 포인트에 따른 설문조사 정보 받기\r\n           .then(response => response.json())\r\n           .then(response => {\r\n               \r\n           })*/\r\n\r\n           inputSlider.style.background = 'linear-gradient(to right, #418AFF 0%, #418AFF '+ value/5 +'%, #C4C4C4 ' + value/5 + '%, #C4C4C4 150%)'\r\n       });\r\n       inputSlider.onblur=(()=>{\r\n        slideValue.classList.remove(\"show\");\r\n       })\r\n    })\r\n   \r\n    return (\r\n        <div class=\"align_center\" style={{fontFamily:'Noto Sans CJK KR', marginTop:'100px'}}>\r\n            <div class=\"range\">\r\n                <div class=\"sliderValue\">\r\n                    <span>0</span>\r\n                </div>\r\n\r\n                <div class=\"field\">\r\n                        <div class=\"value left\">0P</div>\r\n                        <input type=\"range\" min=\"0\" max=\"500\" steps=\"1\" style={{background:'linear-gradient(to right, #418AFF 0%, #418AFF 10%, #C4C4C4 0%, #C4C4C4 0%'}}/>\r\n                        <div class=\"value right\">500P+</div>\r\n                </div>\r\n            </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default PointFilter\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\components\\GridSurveyPreview.js",["124","125","126","127","128"],"import React,{useState, useEffect} from 'react'\r\nimport { Row, Col } from 'antd';\r\nimport pic1 from '../images/pic1.jpg'\r\nimport pic2 from '../images/pic2.jpg'\r\nimport pic3 from '../images/pic3.jpg'\r\nimport pic4 from '../images/pic4.jpg'\r\nimport pic5 from '../images/pic5.jpg'\r\nimport pic6 from '../images/pic6.jpg'\r\nimport pic7 from '../images/pic7.jpg'\r\nimport pic8 from '../images/pic8.jpg'\r\nimport pointBox from '../images/point-box.png'\r\n\r\nfunction GridSurveyPreview() {\r\n\r\n    const [items, setitems] = useState([])\r\n\r\n    const _items=([ \r\n        // 테스트 위한 임시 데이터\r\n        {\r\n            img:pic1,\r\n            title:'구글 드라이브 공유 기능 사용성에...',\r\n            period:'2020.10.22 - 2020.10.31',\r\n            time:1,\r\n            writer:'seungh00',\r\n            point:10\r\n            \r\n        },\r\n        {\r\n            img:pic2,\r\n            title:'소설가 50인이 선정한 2020년 올 ...',\r\n            period:'2020.10.22 - 2020.11.10',\r\n            time:1,\r\n            writer:'seungh00',\r\n            point:10\r\n            \r\n        },\r\n        {\r\n            img:pic3,\r\n            title:'맥딜리버리 어플 사용성에 관한 평 ...',\r\n            period:'2020.10.22 - 2020.11.10',\r\n            time:1,\r\n            writer:'seungh00',\r\n            point:10\r\n            \r\n        },\r\n        {\r\n            img:pic4,\r\n            title:'식물 키우기 어플에 관한 설문조사',\r\n            period:'2020.10.22 - 2020.11.10',\r\n            time:1,\r\n            writer:'seungh00',\r\n            point:10\r\n            \r\n        },\r\n        {\r\n            img:pic5,\r\n            title:'2021년부터 바뀌는 7가지 필수정 ...',\r\n            period:'2020.10.22 - 2020.10.31',\r\n            time:1,\r\n            writer:'seungh00',\r\n            point:10\r\n            \r\n        },\r\n        {\r\n            img:pic6,\r\n            title:'소셜다이닝 어플리케이션 기획조 ...',\r\n            period:'2020.10.30 - 2021.1.1',\r\n            time:1,\r\n            writer:'Seoyoo00',\r\n            point:10\r\n            \r\n        },\r\n        {\r\n            img:pic7,\r\n            title:'보유하고 계신 이동수단을 선택해  ...',\r\n            period:'2020.10.22 - 2021.1.3',\r\n            time:3,\r\n            writer:'Seoyoo00',\r\n            point:10\r\n            \r\n        },\r\n        {\r\n            img:pic8,\r\n            title:'의학 관련 설문조사 ( 해외조사 ) ...',\r\n            period:'2020.10.22 - 2020.1.5',\r\n            time:5,\r\n            writer:'Seoyoo00',\r\n            point:10\r\n            \r\n        }\r\n    ])\r\n\r\n    /*useEffect(() => {\r\n        fetch()\r\n        .then(response => {\r\n            setitems(response.json()) //서버에서 검색 결과 가져오기\r\n        })\r\n    })*/\r\n\r\n    return (\r\n        <div style={{display:'flex',width:'1280px', marginLeft:'320px', marginRight:'320px', fontFamily:'Noto Sans CJK KR'}}>\r\n             <Row gutter={[30, 30]}> {/*그리드 사이에 여백줌*/}\r\n                    {_items.map((item, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <Col lg={6} md={8} xs={24}> \r\n\r\n                                {/* 대표 이미지 */}\r\n                                <div style={{position:'relative', width: '290px', height: '200px',overflow: 'hidden'}}>\r\n                                     <img src={item.img} style={{position:'absolute',zIndex:'1',borderRadius:'10px 10px 0px 0px', width:'100%', height:'100%',objectFit:'cover'}}/>\r\n                              \r\n                                     <img src={pointBox} style={{position:'absolute',zIndex:'2', width:'71px', height:'auto',objectFit:'contain',marginTop:'10px',marginLeft:'12px'}}/>\r\n                                     <span style={{position:'absolute',zIndex:'3',fontSize:'18px', fontWeight:'700', color:'#418AFF',  width:'71px', height:'42px',marginTop:'16px',marginLeft:'12px',textAlign:'center'}}>{item.point}p</span>\r\n                                </div>\r\n                                {/* 대표 이미지 */}\r\n\r\n\r\n                                {/* 텍스트 박스 */}\r\n                                <div style={{width: '290px', height: '100px',backgroundColor: '#EFEFEF',borderRadius:'0px 0px 10px 10px'}}>\r\n                                    <div style={{marginLeft:'12px', marginRight:'12px'}}>\r\n                                        <div style={{width: '290px', textOverflow: 'ellipsis',fontWeight:'700', fontSize:'18px', textAlign:'left'}}>{item.title}</div>\r\n                                        <div style={{fontWeight:'400', fontSize:'16px', textAlign:'left', marginTop:'20px'}}>{item.period}</div>\r\n                                    </div>\r\n                                    <div style={{fontWeight:'400', fontSize:'14px', textAlign:'right',marginRight:'8px', marginBottom:'8px'}}>{item.time}min</div>\r\n                                </div>\r\n                                {/* 텍스트 박스 */}\r\n\r\n                                <div style={{width: '290px',color:'#898989',fontWeight:'400', fontSize:'14px', textAlign:'right'}}>{item.writer}님 제공</div>\r\n                            </Col>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </Row>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GridSurveyPreview\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\pages\\ClosedSurvey.js",["129","130","131","132","133"],"import React, { useEffect,useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SearchResultList from '../components/SearchResultList'\r\nimport SurveyTable from '../common/SurveyTable'\r\nimport { getClosedSurveys } from '../_actions/survey_action'\r\n\r\nfunction ClosedSurvey() {\r\n  const dispatch = useDispatch();\r\n  let closedSurvey;\r\n  const [ClosedSurvey, setClosedSurvey] = useState()\r\n  \r\nuseEffect(() => {\r\n    axios\r\n      .get(\"http://52.79.182.214/surveys/end\")\r\n      .then(response => {\r\n        \r\n        console.log(response.data)\r\n        setClosedSurvey(response.data)\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: '1920px', fontFamily: 'Noto Sans CJK KR' }}>\r\n      <div style={{ float: 'left', marginLeft: '320px', marginBottom: '20px', fontWeight: '700', fontSize: '18px' }}>\r\n        종료된 설문조사\r\n      </div>\r\n\r\n      <SurveyTable data={ClosedSurvey} ></SurveyTable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ClosedSurvey\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\pages\\ResponseSurvey.js",["134","135","136","137","138"],"C:\\Users\\gju06\\Desktop\\final\\src\\common\\SurveyTable.js",["139","140","141","142","143"],"import React,{useEffect, useState} from 'react'\r\nimport DropdownMenu from './DropdownMenu'\r\nimport { Table } from 'antd';\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n/*const MLink = nativeStyled.Link`\r\n  color:black;\r\n  &:hover {\r\n    color: #418AFF;\r\n  }\r\n`*/\r\nvar RowIndex=0;\r\n\r\nfunction SurveyTable(props) {\r\nconst [Surveys, setSurveys] = useState(props.data)\r\n    useEffect(() => {\r\n     setSurveys(props.data)\r\n     console.log(Surveys)\r\n    },[props.data])\r\n\r\n  const columns = [\r\n    {\r\n      title: '제목',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text,record) => {return <Link to={`/result/${record.id}`}>{text}</Link>; }\r\n    },\r\n    {\r\n      title: '포인트',\r\n      dataIndex: 'point',\r\n      key: 'point',\r\n    },\r\n    {\r\n      title:  '응답자 수',\r\n      dataIndex: 'responseCount',\r\n      key: 'responseCount',\r\n    },\r\n    {\r\n      title:  '기간',\r\n      key: 'startDate',\r\n      dataIndex: 'startDate',\r\n    },\r\n  ];\r\n\r\n  \r\n    return (\r\n        <div style={{width:'1920px', fontFamily:'Noto Sans CJK KR'}}>\r\n             <div style={{float:'right', marginRight:'320px'}}>\r\n             <DropdownMenu/>\r\n      </div>   \r\n      <Table columns={columns} dataSource={Surveys} style={{marginLeft:'320px', marginRight:'320px'}} />\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SurveyTable\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\common\\DropdownMenu.js",["144"],"import React from 'react'\r\nimport { Menu, Dropdown} from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nfunction DropdownMenu() {\r\n    \r\n  const menu = (\r\n    <Menu onClick={onClick}>\r\n      <Menu.Item key=\"1\">종료임박 순</Menu.Item>\r\n      <Menu.Item key=\"2\">최신순</Menu.Item>\r\n      <Menu.Item key=\"3\">포인트 높은 순</Menu.Item>\r\n      <Menu.Item key=\"4\">포인트 낮은 순</Menu.Item>\r\n    </Menu>\r\n  );\r\n\r\n  function onClick({ key }){\r\n    let text;\r\n    switch (key) {\r\n      case \"1\":\r\n        text='종료임박 순'\r\n        break;\r\n    case \"2\":\r\n        text='최신순'\r\n        break;\r\n    case \"3\":\r\n        text='포인트 높은 순'\r\n        break;\r\n    case \"4\":\r\n        text='포인트 낮은 순'\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n   document.getElementById('text').innerText=`${text}`\r\n  };\r\n\r\n    return (\r\n        <div>\r\n             <Dropdown overlay={menu}>\r\n          <a id='text' className=\"ant-dropdown-link\" icon={DownOutlined} onClick={e => e.preventDefault()}>\r\n          종료임박 순 <DownOutlined />\r\n          </a>\r\n      </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DropdownMenu\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\common\\SurveyIntro.js",["145","146"],"import React from 'react'\r\nimport defaultimg from '../images/default.png'\r\n\r\nfunction SurveyIntro(props) {\r\n\r\n    function isPreview(){\r\n        if(props.preview==1){\r\n            return   <div style={{ position: 'absolute', zIndex: '2', left: '50%', transform: 'translateX(-50%)', height: '502px', width: '100%', backgroundColor: 'rgb(239,239,239,0.5)' }} />\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ position: 'relative', height: '438px' }}>\r\n                <div style={{ position: 'absolute', zIndex: '0', left: '50%', transform: 'translateX(-50%)', width: '100%', marginTop: '86px' }}>\r\n\r\n            {/*  대표 사진  */}\r\n                    <div style={{ width: '510px' }}>\r\n                        <img src={props.data.filename?`http://52.79.182.214/file/${props.data.filename}`:defaultimg} style={{ position: 'absolute', zIndex: '0', borderRadius: '10px', float: 'left', width:'510px', height:'352px',objectFit:'cover'}} />\r\n                        <div className='pointBox'>\r\n                            <div style={{ fontSize: '18px', fontWeight: '700', color: '#418AFF', marginTop: '5px' }}>{props.data.point}P</div>\r\n                        </div>\r\n                    </div>\r\n            {/*  대표 사진  */}\r\n\r\n\r\n            {/*  설문조사 소개 문구  */}\r\n                    <div style={{ position: 'relative', float: 'right', width: '750px', height: '352px' }}>\r\n                        <div style={{ marginLeft: '29.6px' }}>\r\n                            <div style={{ fontWeight: '700', fontSize: '36px' }}>\r\n                                <span style={{ color: '#418AFF' }}>\r\n                                    [{props.data.category}]\r\n                                </span>\r\n                                &nbsp;{props.data.name}\r\n                            </div>\r\n                            <div style={{ fontWeight: '400', marginTop: '10px', fontSize: '18px' }}>\r\n                                {props.data.startDate} ~ {props.data.endDate} (진행중)\r\n                            </div>\r\n                            <div style={{ fontWeight: '400', marginTop: '39px', fontSize: '18px' }}>\r\n                               {props.data.description}\r\n                            </div>\r\n                             \r\n                            <div style={{ fontWeight: '400', fontSize: '14px', color: '#6C6C6C', position: 'absolute', bottom: '0', right: '0' }}>\r\n                                {props.data.writer.memberId} 님의 설문조사\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n            {/*  설문조사 소개 문구 */}\r\n                </div>\r\n                {isPreview()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SurveyIntro\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\pages\\SurveyResult.js",["147","148","149","150","151","152","153"],"import React,{useState,useEffect} from 'react'\r\nimport { Tabs } from 'antd';\r\nimport SurveyIntro from '../common/SurveyIntro'\r\nimport ClosedQuestionForm from '../common/ClosedQuestionForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ClosedGraphForm from '../common/ClosedGraphForm'\r\nimport downloadIcon from '../images/download.png'\r\nimport { Pagination } from 'antd';\r\nimport axios from 'axios';\r\n\r\nfunction SurveyResult(props) {\r\n    const { params } = props.match;\r\n    const id = params.id\r\n    console.log(id)\r\n    const dispatch = useDispatch();\r\n    //= useSelector(state => console.log(`kkk:${state.survey.results['data']}`),[])||[]\r\n  let surveyResult ;\r\n    useEffect(() => {\r\n        axios.get(`http://52.79.182.214/survey/${id}/answer`,{headers:{'X-AUTH-TOKEN':'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ3aGsiLCJyb2xlcyI6W10sImlhdCI6MTYxMTM1NzY3NCwiZXhwIjoxNjExMzY0ODc0fQ.wqGccCfvLN6FDIYeT_teuT7Vwl9tNdzVnHAAwrZJ468','Access-Control-Allow-Origin': '*',}}).then(response=>{\r\n           console.log(response)\r\n        })\r\n       \r\n    }, [])\r\n  \r\nconsole.log(`qwertt:${surveyResult}`)\r\n\r\n    const { TabPane } = Tabs;\r\n    const [tabkey, settabkey] = useState('1')\r\n    const [CurrentPage, setCurrentPage] = useState(1)\r\n    const closedSurvey = useSelector(state => state.survey.surveys,[])||[]\r\n\r\n   \r\n    const questionData = {\r\n        \"success\": true,\r\n        \"questions\": [\r\n            {\r\n                \"id\": 9,\r\n                \"questionCategoryId\": 1,\r\n                \"questionText\": \"현재 무슨 직업?\",\r\n                \"required\": true,\r\n                \"existFile\": false,\r\n                \"filename\": \"\",\r\n                \"choices\": [\r\n                    \"고등학생\",\r\n                    \"대학생\",\r\n                    \"직장인\"\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 10,\r\n                \"questionCategoryId\": 1,\r\n                \"questionText\": \"주요 언어가 무엇?\",\r\n                \"required\": true,\r\n                \"existFile\": false,\r\n                \"filename\": \"\",\r\n                \"choices\": [\r\n                    \"JAVA\",\r\n                    \"C++\",\r\n                    \"C\",\r\n                    \"PYTHON\",\r\n                    \"JAVASCRIPT\",\r\n                    \"기타\"\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 11,\r\n                \"questionCategoryId\": 5,\r\n                \"questionText\": \"주요 언어를 선호하는 이유는?\",\r\n                \"required\": false,\r\n                \"existFile\": false,\r\n                \"filename\": \"\",\r\n                \"choices\": []\r\n            },\r\n            {\r\n                \"id\": 12,\r\n                \"questionCategoryId\": 1,\r\n                \"questionText\": \"외에 다룰 줄 아는 언어가 있으신가요?\",\r\n                \"required\": false,\r\n                \"existFile\": false,\r\n                \"filename\": \"\",\r\n                \"choices\": [\r\n                    \"JAVA\",\r\n                    \"C++\",\r\n                    \"C\",\r\n                    \"PYTHON\",\r\n                    \"JAVASCRIPT\",\r\n                    \"기타\"\r\n                ]\r\n            }\r\n        ],\r\n        \"summary\": [\r\n            {\r\n                \"answerChoice\": {\r\n                    \"직장인\": 1,\r\n                    \"대학생\": 3\r\n                }\r\n            },\r\n            {\r\n                \"answerChoice\": {\r\n                    \"JAVA\": 1,\r\n                    \"C++\": 1,\r\n                    \"C\": 1,\r\n                    \"PYTHON\": 1\r\n                }\r\n            },\r\n            [\r\n                \"제일 익숙\",\r\n                \"걍\",\r\n                \"제일 쉽다\",\r\n                \"코딩테스트 공부에 적합한 것 같다\"\r\n            ],\r\n            {\r\n                \"answerChoice\": {\r\n                    \"JAVA\": 1,\r\n                    \"C++\": 3\r\n                }\r\n            }\r\n        ],\r\n    \r\n        \"ones\": {\r\n            \"1\": [\r\n                \"3\",\r\n                \"2\",\r\n                \"걍\",\r\n                \"2\"\r\n            ],\r\n            \"2\": [\r\n                \"2\",\r\n                \"3\",\r\n                \"제일 쉽다\",\r\n                \"2\"\r\n            ],\r\n            \"3\": [\r\n                \"2\",\r\n                \"1\",\r\n                \"제일 익숙\",\r\n                \"2\"\r\n            ],\r\n            \"4\": [\r\n                \"2\",\r\n                \"4\",\r\n                \"코딩테스트 공부에 적합한 것 같다\",\r\n                \"1\"\r\n            ]\r\n        }\r\n    }\r\n\r\n    const ResponseNum = Object.keys(questionData.ones).length\r\n\r\n    function tabStyle(title) { \r\n        return (\r\n            <div style={{ width: '600px', textAlign: 'center', fontSize: '18px', fontWeight: '700', color: '#2D59B8', marginTop: '20px', marginBottom: '20px' }}>\r\n                {title}\r\n            </div>) \r\n    }\r\n\r\n\r\n    const mapToBoxComponent = data => {\r\n        return data.questions.map((question, index) => (\r\n            <div>\r\n                 {/*  박스 상단바  */}\r\n                <div style={{ height: '45px', backgroundColor: '#EFEFEF', border: 'solid #C4C4C4', borderWidth: '1px 1px 0 1px', borderRadius: '10px 10px 0 0' }}>\r\n                    <div style={{ position: 'absolute', width: '100px', fontSize: '18px', fontWeight: '400', marginLeft: '27px', marginTop: '9px' }}>\r\n                        질문 {index+1}\r\n                    </div>\r\n                    <div style={{ width: '1150px', float: 'right', fontWeight: '700', fontSize: '18px', marginTop: '9px' }}>\r\n                        {question.questionText}\r\n                    </div>\r\n                </div>\r\n                 {/*  박스 상단바  */}\r\n                \r\n                 {/*  설문 결과 출력  */}\r\n                <div style={{ height: '500px', border: 'solid #C4C4C4', borderWidth: '0 1px 1px 1px', borderRadius: '0 0 10 10', marginBottom: '58px'}}>\r\n                <div ><ClosedGraphForm categoryId={question.questionCategoryId} summary={data.summary[index]} index={index}/></div>\r\n                </div>\r\n                 {/*  설문 결과 출력  */}\r\n            </div>\r\n        )\r\n        );\r\n    }\r\n    const onPageChange =page=>{\r\n        console.log(page)\r\n        setCurrentPage(page)\r\n    }\r\n    const mapToComponent = (questions, person) => {\r\n        return questions.map((question, index) => (<ClosedQuestionForm question={question} index={index} ones={(questionData.ones[CurrentPage])[index]}  />) //question으로 질문 한 세트 전달됨.\r\n        );\r\n    }\r\n\r\n    function callback(_key) { // 탭 변경했을 때\r\n        settabkey(_key);\r\n    }\r\n\r\n    function tagreturn(){\r\n        if(tabkey==='1'){\r\n            return ( <div style={{ height:'153px',fontSize: '36px', fontWeight: '700', color: '#418AFF',paddingTop:'40px' }}>\r\n                        총 응답자 {ResponseNum}명\r\n                        <a style={{ float: 'right', fontSize: '18px', fontWeight: '400', color: '#000', color: '#000' }}>\r\n                            <img src={downloadIcon} style={{ height: '13px', width: '14px' }} />\r\n                                .csv로 다운로드\r\n                        </a>\r\n                    </div>)\r\n        } else{\r\n            return (\r\n                <div style={{height:'153px',fontSize: '18px', fontWeight: '700', color: '#000',paddingTop:'40px' }}>\r\n                    개별 응답\r\n                    <div style={{ float: 'right', width: '1141px' }}>\r\n                        <Pagination simple defaultCurrent={1} total={ResponseNum*10} onChange={onPageChange}/>\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const Demo = () => ( \r\n        <Tabs size='large' defaultActiveKey={tabkey} onChange={callback}>\r\n\r\n            <TabPane tab={tabStyle('요약 보기')} key=\"1\">\r\n\r\n                <div style={{ marginTop: '86px' }}>\r\n                    {mapToBoxComponent(questionData)}\r\n                </div>\r\n\r\n                <button style={{ float: 'right', backgroundColor: '#418AFF', border: '0px', borderRadius: '10px', height: '59px', width: '180px', color: '#fff', fontSize: '18px', fontWeight: '400', marginTop: '28px' }}>확인</button>\r\n            </TabPane>\r\n\r\n            <TabPane tab={tabStyle('개별 보기')} key=\"2\">\r\n                \r\n                {/*  질문 항목들  */}\r\n                <div style={{ marginTop: '84px', marginBottom: '57px' }}>\r\n                    {mapToComponent(questionData.questions, questionData.ones)}\r\n                </div>\r\n                {/*  질문 항목들  */}\r\n                \r\n                <button style={{ float: 'right', backgroundColor: '#418AFF', border: '0px', borderRadius: '10px', height: '59px', width: '180px', color: '#fff', fontSize: '18px', fontWeight: '400' }}>확인</button>\r\n            </TabPane>\r\n\r\n        </Tabs>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ fontFamily: 'Noto Sans CJK KR', width: '1280px', marginLeft: '320px', marginRight: '320px' }}>\r\n\r\n               {/* <SurveyIntro preview={0}/>*/ }\r\n                <hr style={{ backgroundColor: '#C4C4C4', marginTop: '64px', height: '1px', border: '0' }} />\r\n\r\n                <div id='here' >\r\n                {tagreturn() }\r\n                </div>\r\n                <Demo />\r\n\r\n            </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default SurveyResult\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\_reducers\\index.js",[],"C:\\Users\\gju06\\Desktop\\final\\src\\_actions\\survey_action.js",["154"],"C:\\Users\\gju06\\Desktop\\final\\src\\_actions\\types.js",[],"C:\\Users\\gju06\\Desktop\\final\\src\\_reducers\\survey_reducer.js",["155","156","157"],"import {\r\n    GET_SURVEY_RESULT, GET_CLOSED_SURVEY,POST_SURVEY_RESPONSE,COMBINE_SURVEY_RESPONSE\r\n} from '../_actions/types'\r\n\r\nexport default function(state=[], action){\r\n    switch (action.type) {\r\n        case GET_CLOSED_SURVEY:\r\n            return {...state, surveys: action.payload}\r\n        case GET_SURVEY_RESULT:\r\n            return {...state, results: action.payload}\r\n        case COMBINE_SURVEY_RESPONSE:\r\n            return {...state, responsejson: action.payload}\r\n        default:\r\n            return {state}\r\n            break;\r\n    }\r\n}","C:\\Users\\gju06\\Desktop\\final\\src\\common\\ClosedQuestionForm.js",["158","159","160","161","162","163"],"import React,{useState, useEffect} from 'react';\r\nimport { Radio } from 'antd';\r\nimport { Checkbox } from 'antd';\r\nimport { Menu, Dropdown, Button, message } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport { DatePicker, Space } from 'antd';\r\nimport { TimePicker } from 'antd';\r\n\r\nfunction ClosedQuestionForm(props) {\r\n\r\n    const [Value, setValue] = useState(props.ones) // 사용자 응답 값\r\n    const [isBtnDisable, setisBtnDisable] = useState(0) // 이 값을 ResponseSurvey 에 어떻게 전달해줄것인지?(버튼 활성화)\r\n    \r\n    const question = props.question\r\n    const radioStyle = { //라디오 버튼 스타일\r\n        display: 'block',\r\n        height: '33px',\r\n        lineHeight: '30px',\r\n      };\r\n\r\n    const { TextArea } = Input;\r\n \r\n\r\n   function onCheckChange(checkedValues){ // 체크 박스 선택 감지\r\n        console.log('checked = ', checkedValues);\r\n      }\r\n   \r\n\r\n    function onRaioChange (e){ // 라디오 버튼 선택 감지\r\n        console.log('radio checked', e.target.value);\r\n        setValue(e.target.value);\r\n      };\r\n\r\n      function onDateChange(date, dateString) { // 날짜 선택 감지\r\n        console.log(date, dateString);\r\n      }\r\n\r\n      function onTimeChange(time, timeString) { // 시간 선택 감지\r\n        console.log(time, timeString);\r\n      }\r\n\r\n    function createCheckBtn() { // 체크 박스 생성\r\n        var plainOptions = [];\r\n        for (let index = 0; index < question.choices.length; index++) {\r\n            plainOptions.push(question.choices[index])\r\n        }\r\n        return (<div><Checkbox.Group options={plainOptions} defaultValue={question.example[0]} onChange={onCheckChange} />\r\n            <br />\r\n            <br /></div>);\r\n    } \r\n    function isRadioDisabled(d){\r\n\r\n        let RadioDisabled = true;\r\n\r\n        if(d===Value){\r\n            RadioDisabled = false\r\n        }\r\n        return RadioDisabled;\r\n    }\r\n    function createRadioBtn() { // 라디오 버튼 생성\r\n        var radioRows = [];\r\n        for (let index = 0; index < question.choices.length; index++) {\r\n            radioRows.push(<Radio style={radioStyle} value={`${index+1}`} disabled={isRadioDisabled(`${index+1}`)}>{question.choices[index]}</Radio>)\r\n        }\r\n        return (<div><Radio.Group onChange={onRaioChange} value={Value}>{radioRows}</Radio.Group></div>);\r\n    }\r\n\r\n    function createDropdown() { // 드롭다운 아이템 생성\r\n        var items = [];\r\n        var menu;\r\n        for (let index = 0; index < question.choices.length; index++) {\r\n            items.push( <Menu.Item key={index+1} > {question.choices[index]}</Menu.Item>)\r\n        }\r\n        menu=<Menu onClick={handleMenuClick}>{items}</Menu>\r\n        return (<div><Dropdown overlay={menu}><Button > {question.choices[0]} <DownOutlined /></Button></Dropdown></div>);\r\n    }\r\n\r\n    function createDatePicker(){ \r\n        return (<div><Space id='startDate' direction=\"vertical\"><DatePicker placeholder='yyyy.mm.dd' onChange={onDateChange}/></Space>\r\n         <span style={{marginLeft:'10px', marginRight:'10px', fontWeight:'400', fontSize:'18px'}}>~</span> \r\n         <Space id='endDate' direction=\"vertical\"><DatePicker placeholder='yyyy.mm.dd' onChange={onDateChange}/></Space></div>)\r\n    }\r\n\r\n    function switchQuestionType(){ // question id에 따른 태그 반환\r\n        switch (question.questionCategoryId) {\r\n            case 1:\r\n                return createRadioBtn();\r\n            case 2:\r\n                return createCheckBtn();\r\n            case 3:\r\n                return createDropdown();\r\n            case 4:\r\n                {\r\n                   /* if(1/*text 채워졌으면){\r\n                        setisBtnDisable(1)\r\n                    }*/\r\n                return <Input placeholder=\"답변을 입력해주세요.\" value={Value} disabled/>\r\n                }\r\n            case 5:\r\n                {\r\n                   /* if(1/*text 채워졌으면){\r\n                        setisBtnDisable(1)\r\n                    }*/\r\n                return <TextArea rows={3} value={Value} disabled/>\r\n                }\r\n            case 6:\r\n                {\r\n                    /*if(1/*날짜 선택 했으면){\r\n                        setisBtnDisable(1)\r\n                    }*/\r\n                return createDatePicker();\r\n                }\r\n            case 7:\r\n                {\r\n                   /* if(1/*시간 선택 했으면){\r\n                        setisBtnDisable(1)\r\n                    }*/\r\n                return <TimePicker use12Hours format=\"h:mm a\" onChange={onTimeChange} />\r\n                }\r\n            default:\r\n                return <div>I Don't Know</div>\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleButtonClick(e) {\r\n        message.info('Click on left button.');\r\n        console.log('click left button', e);\r\n      }\r\n      \r\n      function handleMenuClick(e) {\r\n        message.info('Click on menu item.');\r\n        console.log('click', e);\r\n      }\r\n\r\n      function isEssential(){\r\n        if(question.required==1){return (<span style={{color:'#418AFF'}}> &nbsp;*</span>)}\r\n      }\r\n\r\n    return ( \r\n        <div style={{marginBottom:'116px',fontFamily:'Noto Sans CJK KR'}}>\r\n\r\n            <div style={{width:'1000px'}}>\r\n                <div style={{position:'absolute',fontWeight:'400',fontSize:'18px',marginRight:'30px'}}>질문 {props.index+1}\r\n                </div>\r\n                <div style={{marginLeft:'100px'}}>\r\n                    <span style={{fontWeight:'700', fontSize:'18px'}}>{question.questionText}{isEssential()}</span>\r\n                    <div style={{marginTop:'20px'}}>\r\n                    {switchQuestionType()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ClosedQuestionForm\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\common\\ClosedGraphForm.js",["164","165","166","167"],"import React, { useState } from 'react'\r\nimport { Pie } from 'ant-design-pro/lib/Charts';\r\nimport ApexCharts from 'apexcharts'\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { Input } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction ClosedGraphForm(props) {\r\n\r\n    const answerChoice = props.summary.answerChoice; //{\"직장인\":1, \"대학생\":3} 들어있음.\r\n    let JsonKeyArr;\r\n    let JsonValueArr;\r\n    let NumOfKey;\r\n    const { TextArea } = Input;\r\n    if (typeof answerChoice !== 'undefined') { JsonKeyArr = Object.keys(answerChoice); } //{\"직장인\", \"대학생\"} 들어있음.\r\n    if (typeof JsonKeyArr !== 'undefined') { NumOfKey = JsonKeyArr.length; }\r\n  //  let PieData; // [ { x: '직장인', y: 1, },{ x: '대학생', y: 3, }] 이렇게 데이터 들어감.\r\n\r\n\r\n    /*const makePieData = ()=>{ //보기 두개 일때(체크 버튼, 라디오 버튼의 경우)\r\n       \r\n        PieData = [];\r\n        for(let index = 0; index <NumOfKey; index++){\r\n            let answerJson = {};\r\n            answerJson.x=JsonKeyArr[index]\r\n            answerJson.y= answerChoice[JsonKeyArr[index]]\r\n            PieData.push(answerJson)\r\n        }\r\n        console.log(PieData)\r\n}*/\r\n\r\n    const makeGraphData = () => { //보기 두개 일때(체크 버튼, 라디오 버튼의 경우)\r\n\r\n        JsonValueArr = [];\r\n        for (let index = 0; index < NumOfKey; index++) {\r\n            JsonValueArr.push(answerChoice[JsonKeyArr[index]])\r\n        }\r\n        console.log(`arr:${typeof JsonValueArr}`)\r\n    }\r\n\r\n    const returnInput = ()=>{\r\n        props.summary.map((data,index)=>{console.log(`heehee:${data}`)})\r\n       // return <Input placeholder=\"답변을 입력해주세요.\" value={Value} disabled />\r\n    }\r\n    const returnTextArea = ()=>{\r\n        return props.summary.map((data,index)=>(<div style={{ width: '1000px', marginBottom:'20px', marginLeft:'150px',marginTop:'30px' }}><TextArea rows={3} value={data} disabled /></div>))\r\n\r\n    }\r\n    const returnBarGraph = () => {\r\n        makeGraphData();\r\n        //var chart = new ApexCharts(document.querySelector(\"#chart\"), barOptions);\r\n        return <div style={{ width: '900px', marginLeft:'150px', marginTop:'100px' }}><ReactApexChart\r\n            options={{\r\n                chart: {\r\n                    type: 'bar',\r\n                    height: 350,\r\n                    width: 50\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: true,\r\n                        barHeight: '50%'\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                xaxis: {\r\n                    categories: JsonKeyArr\r\n                }\r\n            }}\r\n            series={[{\r\n                name: '응답 수',\r\n                data: JsonValueArr\r\n            }]}\r\n            type=\"bar\"\r\n            height={350} /></div>\r\n\r\n\r\n\r\n    }\r\n    const returnPieGraph = () => {\r\n        makeGraphData();\r\n        return <div style={{ width: '500px', marginLeft:'350px', marginTop:'100px' }}><ReactApexChart\r\n            options={{\r\n                chart: {\r\n                    type: 'donut',\r\n                },\r\n                responsive: [{\r\n                    breakpoint: 480,\r\n                    options: {\r\n                        chart: {\r\n                            width: 500\r\n                        },\r\n                        legend: {\r\n                            position: 'bottom'\r\n                        }\r\n                    }\r\n                }],\r\n                labels: JsonKeyArr\r\n            }}\r\n            series={JsonValueArr\r\n            } type=\"donut\" /></div>\r\n\r\n\r\n        /*return (<Pie\r\n         colors={['#2D59B8', '#418AFF']}\r\n         lineWidth={0}\r\n         innerRadius={10}\r\n         hasLegend\r\n         total={() => (\r\n           <span\r\n            \r\n           />\r\n         )}\r\n         data={PieData}\r\n         valueFormat={val => <span dangerouslySetInnerHTML={{ __html: (val+'명') }} />}\r\n         height={294}\r\n       />)*/\r\n    }\r\n\r\n\r\n    /*       \r\n   var barOptions = {\r\n       series: [{\r\n       data: JsonValueArr\r\n     }],\r\n       chart: {\r\n       type: 'bar',\r\n       height: 350\r\n     },\r\n     plotOptions: {\r\n       bar: {\r\n         horizontal: true,\r\n       }\r\n     },\r\n     dataLabels: {\r\n       enabled: false\r\n     },\r\n     xaxis: {\r\n       categories: JsonKeyArr\r\n     }\r\n     };*/\r\n\r\n\r\n    function switchQuestionType() { // question id에 따른 태그 반환\r\n        switch (props.categoryId) {\r\n            case 1:\r\n                if (NumOfKey <= 2) { return returnPieGraph(); }\r\n                else { return returnBarGraph(); }\r\n            case 2:\r\n                if (NumOfKey <= 2) { return returnPieGraph(); }\r\n                else { return returnBarGraph(); }\r\n            case 3:\r\n                if (NumOfKey <= 2) { return returnPieGraph(); }\r\n                else { return returnBarGraph(); }\r\n            case 4:\r\n                return returnInput();\r\n            case 5:\r\n                return returnTextArea();\r\n\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            {switchQuestionType()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClosedGraphForm\r\n","C:\\Users\\gju06\\Desktop\\final\\src\\common\\QuestionForm.js",["168","169","170","171","172","173"],"import React,{useState} from 'react';\r\nimport { Radio } from 'antd';\r\nimport { Checkbox } from 'antd';\r\nimport { Menu, Dropdown, Button, message } from 'antd';\r\nimport { DownOutlined } from '@ant-design/icons';\r\nimport { Input } from 'antd';\r\nimport { DatePicker, Space } from 'antd';\r\nimport { TimePicker } from 'antd';\r\nimport { CollectSurveyResponse } from '../_actions/survey_action';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nfunction QuestionForm(props) {\r\n    const dispatch = useDispatch();\r\n  \r\n    const [Value, setValue] = useState() // 라디오 버튼 선택 값\r\n    const [isBtnDisable, setisBtnDisable] = useState(0) // 이 값을 ResponseSurvey 에 어떻게 전달해줄것인지?(버튼 활성화)\r\n console.log(Value)\r\n    const radioStyle = { //라디오 버튼 스타일\r\n        display: 'block',\r\n        height: '33px',\r\n        lineHeight: '30px',\r\n      };\r\n\r\n    const { TextArea } = Input;\r\n \r\n\r\n   function onCheckChange(checkedValues){ // 체크 박스 선택 감지\r\n        setValue(checkedValues)\r\n        dispatch(CollectSurveyResponse(props.question.id,Value));\r\n      }\r\n   \r\n\r\n    function onRaioChange (e){ // 라디오 버튼 선택 감지\r\n        setValue(e.target.value);\r\n        dispatch(CollectSurveyResponse(props.question.id,Value));\r\n      };\r\n\r\n      function onInputChange(e){\r\n        setValue(e.target.value);\r\n        dispatch(CollectSurveyResponse(props.question.id,Value));\r\n      }\r\n      function onTextAreaChange(e){\r\n        setValue(e.target.value);\r\n        dispatch(CollectSurveyResponse(props.question.id,Value));\r\n      }\r\n\r\n      function onDateChange(date, dateString) { // 날짜 선택 감지\r\n        setValue(dateString)\r\n        dispatch(CollectSurveyResponse(props.question.id,Value));\r\n      }\r\n\r\n      function onTimeChange(time, timeString) { // 시간 선택 감지\r\n        setValue(timeString)\r\n        dispatch(CollectSurveyResponse(props.question.id,Value));\r\n      }\r\n\r\n    function createCheckBtn() { // 체크 박스 생성\r\n        var plainOptions = [];\r\n        for (let index = 0; index < props.question.choices.length; index++) {\r\n            plainOptions.push(props.question.choices[index])\r\n        }\r\n        return (<div><Checkbox.Group options={plainOptions} defaultValue={null} onChange={onCheckChange} />\r\n            <br />\r\n            <br /></div>);\r\n    } \r\n    function createRadioBtn() { // 라디오 버튼 생성\r\n        var radioRows = [];\r\n        for (let index = 0; index < props.question.choices.length; index++) {\r\n            radioRows.push(<Radio style={radioStyle} value={index+1}>{props.question.choices[index]}</Radio>)\r\n        }\r\n        return (<div><Radio.Group onChange={onRaioChange} value={Value}>{radioRows}</Radio.Group></div>);\r\n    }\r\n\r\n    function createDropdown() { // 드롭다운 아이템 생성\r\n        var items = [];\r\n        var menu;\r\n        for (let index = 0; index < props.question.choices.length; index++) {\r\n            items.push( <Menu.Item key={index+1} > {props.question.choices[index]}</Menu.Item>)\r\n        }\r\n        menu=<Menu onClick={handleMenuClick}>{items}</Menu>\r\n        return (<div><Dropdown overlay={menu}><Button > {props.question.choices[0]} <DownOutlined /></Button></Dropdown></div>);\r\n    }\r\n\r\n    function createDatePicker(){ \r\n        return (<div><Space id='startDate' direction=\"vertical\"><DatePicker placeholder='yyyy.mm.dd' onChange={onDateChange}/></Space>\r\n         <span style={{marginLeft:'10px', marginRight:'10px', fontWeight:'400', fontSize:'18px'}}>~</span> \r\n         <Space id='endDate' direction=\"vertical\"><DatePicker placeholder='yyyy.mm.dd' onChange={onDateChange}/></Space></div>)\r\n    }\r\n\r\n    function switchQuestionType(){ // question id에 따른 태그 반환\r\n        switch (props.question.questionCategoryId) {\r\n            case 1:\r\n                return createRadioBtn();\r\n            case 2:\r\n                return createCheckBtn();\r\n            case 3:\r\n                return createDropdown();\r\n            case 4:\r\n                {\r\n                   /* if(1/*text 채워졌으면){\r\n                        setisBtnDisable(1)\r\n                    }*/\r\n                return <Input placeholder=\"답변을 입력해주세요.\" onChange={onInputChange}/>\r\n                }\r\n            case 5:\r\n                {\r\n                   /* if(1/*text 채워졌으면){\r\n                        setisBtnDisable(1)\r\n                    }*/\r\n                return <TextArea placeholder=\"답변을 입력해주세요.\" rows={4} onChange={onTextAreaChange}/>\r\n                }\r\n            case 6:\r\n                {\r\n                    /*if(1/*날짜 선택 했으면){\r\n                        setisBtnDisable(1)\r\n                    }*/\r\n                return createDatePicker();\r\n                }\r\n            case 7:\r\n                {\r\n                   /* if(1/*시간 선택 했으면){\r\n                        setisBtnDisable(1)\r\n                    }*/\r\n                return <TimePicker use12Hours format=\"h:mm a\" onChange={onTimeChange} />\r\n                }\r\n            default:\r\n                return <div>I Don't Know</div>\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleButtonClick(e) {\r\n        message.info('Click on left button.');\r\n        console.log('click left button', e);\r\n      }\r\n      \r\n      function handleMenuClick(e) {\r\n        message.info('Click on menu item.');\r\n        console.log('click', e);\r\n      }\r\n\r\n      function isEssential(){\r\n        if(props.question.required==true){return (<span style={{color:'#418AFF'}}> &nbsp;*</span>)}\r\n      }\r\n      \r\n\r\n    return ( \r\n        <div style={{marginBottom:'116px',fontFamily:'Noto Sans CJK KR'}}>\r\n\r\n            <div style={{width:'1000px'}}>\r\n                <div style={{position:'absolute',fontWeight:'400',fontSize:'18px',marginRight:'30px'}}>질문 {props.index}\r\n                </div>\r\n                <div style={{marginLeft:'100px'}}>\r\n                    <span style={{fontWeight:'700', fontSize:'18px'}}>{props.question.questionText}{isEssential()}</span>\r\n                    <div style={{marginTop:'20px'}}>\r\n                    {switchQuestionType()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default QuestionForm\r\n",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":1,"column":8,"nodeType":"180","messageId":"181","endLine":1,"endColumn":12},{"ruleId":"178","severity":1,"message":"182","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":24},{"ruleId":"178","severity":1,"message":"183","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":25},{"ruleId":"178","severity":1,"message":"184","line":5,"column":8,"nodeType":"180","messageId":"181","endLine":5,"endColumn":20},{"ruleId":"178","severity":1,"message":"185","line":9,"column":17,"nodeType":"180","messageId":"181","endLine":9,"endColumn":25},{"ruleId":"178","severity":1,"message":"186","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":26},{"ruleId":"178","severity":1,"message":"187","line":6,"column":12,"nodeType":"180","messageId":"181","endLine":6,"endColumn":25},{"ruleId":"178","severity":1,"message":"188","line":6,"column":27,"nodeType":"180","messageId":"181","endLine":6,"endColumn":43},{"ruleId":"174","replacedBy":"189"},{"ruleId":"176","replacedBy":"190"},{"ruleId":"178","severity":1,"message":"186","line":1,"column":27,"nodeType":"180","messageId":"181","endLine":1,"endColumn":36},{"ruleId":"178","severity":1,"message":"191","line":5,"column":19,"nodeType":"180","messageId":"181","endLine":5,"endColumn":27},{"ruleId":"178","severity":1,"message":"192","line":6,"column":26,"nodeType":"180","messageId":"181","endLine":6,"endColumn":41},{"ruleId":"193","severity":1,"message":"194","line":53,"column":25,"nodeType":"195","endLine":53,"endColumn":28},{"ruleId":"178","severity":1,"message":"196","line":7,"column":25,"nodeType":"180","messageId":"181","endLine":7,"endColumn":41},{"ruleId":"178","severity":1,"message":"197","line":8,"column":23,"nodeType":"180","messageId":"181","endLine":8,"endColumn":37},{"ruleId":"178","severity":1,"message":"198","line":9,"column":10,"nodeType":"180","messageId":"181","endLine":9,"endColumn":23},{"ruleId":"178","severity":1,"message":"199","line":9,"column":25,"nodeType":"180","messageId":"181","endLine":9,"endColumn":41},{"ruleId":"178","severity":1,"message":"200","line":5,"column":12,"nodeType":"180","messageId":"181","endLine":5,"endColumn":17},{"ruleId":"178","severity":1,"message":"186","line":1,"column":25,"nodeType":"180","messageId":"181","endLine":1,"endColumn":34},{"ruleId":"178","severity":1,"message":"201","line":15,"column":12,"nodeType":"180","messageId":"181","endLine":15,"endColumn":17},{"ruleId":"178","severity":1,"message":"202","line":15,"column":19,"nodeType":"180","messageId":"181","endLine":15,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":109,"column":38,"nodeType":"195","endLine":109,"endColumn":180},{"ruleId":"203","severity":1,"message":"204","line":111,"column":38,"nodeType":"195","endLine":111,"endColumn":184},{"ruleId":"178","severity":1,"message":"205","line":3,"column":23,"nodeType":"180","messageId":"181","endLine":3,"endColumn":34},{"ruleId":"178","severity":1,"message":"182","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":24},{"ruleId":"178","severity":1,"message":"206","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":26},{"ruleId":"178","severity":1,"message":"207","line":9,"column":9,"nodeType":"180","messageId":"181","endLine":9,"endColumn":17},{"ruleId":"178","severity":1,"message":"208","line":10,"column":7,"nodeType":"180","messageId":"181","endLine":10,"endColumn":19},{"ruleId":"178","severity":1,"message":"185","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"209","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":20},{"ruleId":"178","severity":1,"message":"210","line":5,"column":8,"nodeType":"180","messageId":"181","endLine":5,"endColumn":19},{"ruleId":"178","severity":1,"message":"211","line":7,"column":10,"nodeType":"180","messageId":"181","endLine":7,"endColumn":21},{"ruleId":"178","severity":1,"message":"205","line":7,"column":23,"nodeType":"180","messageId":"181","endLine":7,"endColumn":34},{"ruleId":"178","severity":1,"message":"212","line":4,"column":8,"nodeType":"180","messageId":"181","endLine":4,"endColumn":14},{"ruleId":"178","severity":1,"message":"211","line":6,"column":10,"nodeType":"180","messageId":"181","endLine":6,"endColumn":21},{"ruleId":"178","severity":1,"message":"205","line":6,"column":23,"nodeType":"180","messageId":"181","endLine":6,"endColumn":34},{"ruleId":"178","severity":1,"message":"213","line":14,"column":5,"nodeType":"180","messageId":"181","endLine":14,"endColumn":13},{"ruleId":"214","severity":1,"message":"215","line":21,"column":7,"nodeType":"216","endLine":21,"endColumn":19,"suggestions":"217"},{"ruleId":"193","severity":1,"message":"194","line":40,"column":11,"nodeType":"195","endLine":40,"endColumn":108},{"ruleId":"218","severity":1,"message":"219","line":7,"column":25,"nodeType":"220","messageId":"221","endLine":7,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":20,"column":25,"nodeType":"195","endLine":20,"endColumn":251},{"ruleId":"178","severity":1,"message":"222","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":19},{"ruleId":"178","severity":1,"message":"207","line":15,"column":11,"nodeType":"180","messageId":"181","endLine":15,"endColumn":19},{"ruleId":"214","severity":1,"message":"223","line":23,"column":8,"nodeType":"216","endLine":23,"endColumn":10,"suggestions":"224"},{"ruleId":"178","severity":1,"message":"225","line":30,"column":11,"nodeType":"180","messageId":"181","endLine":30,"endColumn":23},{"ruleId":"193","severity":1,"message":"194","line":198,"column":25,"nodeType":"195","endLine":198,"endColumn":122},{"ruleId":"226","severity":1,"message":"227","line":198,"column":105,"nodeType":"228","messageId":"221","endLine":198,"endColumn":110},{"ruleId":"203","severity":1,"message":"204","line":199,"column":29,"nodeType":"195","endLine":199,"endColumn":97},{"ruleId":"178","severity":1,"message":"229","line":3,"column":42,"nodeType":"180","messageId":"181","endLine":3,"endColumn":62},{"ruleId":"178","severity":1,"message":"229","line":2,"column":42,"nodeType":"180","messageId":"181","endLine":2,"endColumn":62},{"ruleId":"230","severity":1,"message":"231","line":5,"column":1,"nodeType":"232","endLine":17,"endColumn":2},{"ruleId":"233","severity":1,"message":"234","line":15,"column":13,"nodeType":"235","messageId":"236","endLine":15,"endColumn":19},{"ruleId":"178","severity":1,"message":"186","line":1,"column":25,"nodeType":"180","messageId":"181","endLine":1,"endColumn":34},{"ruleId":"178","severity":1,"message":"237","line":13,"column":12,"nodeType":"180","messageId":"181","endLine":13,"endColumn":24},{"ruleId":"178","severity":1,"message":"238","line":13,"column":26,"nodeType":"180","messageId":"181","endLine":13,"endColumn":41},{"ruleId":"233","severity":1,"message":"234","line":123,"column":17,"nodeType":"235","messageId":"236","endLine":123,"endColumn":23},{"ruleId":"178","severity":1,"message":"239","line":127,"column":14,"nodeType":"180","messageId":"181","endLine":127,"endColumn":31},{"ruleId":"218","severity":1,"message":"219","line":138,"column":29,"nodeType":"220","messageId":"221","endLine":138,"endColumn":31},{"ruleId":"178","severity":1,"message":"185","line":1,"column":17,"nodeType":"180","messageId":"181","endLine":1,"endColumn":25},{"ruleId":"178","severity":1,"message":"240","line":2,"column":10,"nodeType":"180","messageId":"181","endLine":2,"endColumn":13},{"ruleId":"178","severity":1,"message":"241","line":3,"column":8,"nodeType":"180","messageId":"181","endLine":3,"endColumn":18},{"ruleId":"242","severity":1,"message":"243","line":46,"column":39,"nodeType":"244","messageId":"245","endLine":46,"endColumn":41},{"ruleId":"178","severity":1,"message":"205","line":10,"column":23,"nodeType":"180","messageId":"181","endLine":10,"endColumn":34},{"ruleId":"178","severity":1,"message":"237","line":16,"column":12,"nodeType":"180","messageId":"181","endLine":16,"endColumn":24},{"ruleId":"178","severity":1,"message":"238","line":16,"column":26,"nodeType":"180","messageId":"181","endLine":16,"endColumn":41},{"ruleId":"233","severity":1,"message":"234","line":128,"column":17,"nodeType":"235","messageId":"236","endLine":128,"endColumn":23},{"ruleId":"178","severity":1,"message":"239","line":132,"column":14,"nodeType":"180","messageId":"181","endLine":132,"endColumn":31},{"ruleId":"218","severity":1,"message":"219","line":143,"column":35,"nodeType":"220","messageId":"221","endLine":143,"endColumn":37},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SearchResultList' is defined but never used.","'GridSurveyPreview' is defined but never used.","'ClosedSurvey' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'questionDatas' is assigned a value but never used.","'setquestionDatas' is assigned a value but never used.",["246"],["247"],"'setPoint' is assigned a value but never used.","'setBalancePoint' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setSearchKeyword' is assigned a value but never used.","'setNumOfSearch' is assigned a value but never used.","'SearchResults' is assigned a value but never used.","'setSearchResults' is assigned a value but never used.","'point' is assigned a value but never used.","'items' is assigned a value but never used.","'setitems' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useSelector' is defined but never used.","'getClosedSurveys' is defined but never used.","'dispatch' is assigned a value but never used.","'closedSurvey' is defined but never used.","'DropdownMenu' is defined but never used.","'PointFilter' is defined but never used.","'useDispatch' is defined but never used.","'styled' is defined but never used.","'RowIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Surveys'. Either include it or remove the dependency array.","ArrayExpression",["248"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'SurveyIntro' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["249"],"'closedSurvey' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","'POST_SURVEY_RESPONSE' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'isBtnDisable' is assigned a value but never used.","'setisBtnDisable' is assigned a value but never used.","'handleButtonClick' is defined but never used.","'Pie' is defined but never used.","'ApexCharts' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [Surveys, props.data]",{"range":"254","text":"255"},"Update the dependencies array to be: [id]",{"range":"256","text":"257"},[546,558],"[Surveys, props.data]",[1058,1060],"[id]"]